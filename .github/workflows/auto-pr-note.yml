name: 接收 PR 備註請求

on:
  repository_dispatch:
    types: [pr-note, dev-note]

permissions:
  contents: write

jobs:
  submit-pr-note:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout ErDashboard
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: 提取事件資訊
      id: event_info
      run: |
        echo "PROJECT_NAME=${{ github.event.client_payload.project_name }}" >> $GITHUB_OUTPUT
        echo "GITHUB_USER=${{ github.event.client_payload.github_user }}" >> $GITHUB_OUTPUT
        echo "EVENT_TYPE=${{ github.event.client_payload.event_type }}" >> $GITHUB_OUTPUT
        echo "TITLE=${{ github.event.client_payload.title || github.event.client_payload.pr_title }}" >> $GITHUB_OUTPUT
        echo "NUMBER=${{ github.event.client_payload.number || github.event.client_payload.pr_number }}" >> $GITHUB_OUTPUT
        echo "REPO_NAME=${{ github.event.client_payload.repo_name }}" >> $GITHUB_OUTPUT
        echo "URL=${{ github.event.client_payload.url || github.event.client_payload.pr_url }}" >> $GITHUB_OUTPUT

    - name: 建立開發備註
      run: |
        PROJECT_NAME="${{ steps.event_info.outputs.PROJECT_NAME }}"
        GITHUB_USER="${{ steps.event_info.outputs.GITHUB_USER }}"
        EVENT_TYPE="${{ steps.event_info.outputs.EVENT_TYPE }}"
        TITLE="${{ steps.event_info.outputs.TITLE }}"
        NUMBER="${{ steps.event_info.outputs.NUMBER }}"
        REPO_NAME="${{ steps.event_info.outputs.REPO_NAME }}"

        echo "🚀 自動提交開發備註:"
        echo "專案: ${PROJECT_NAME}"
        echo "倉庫: ${REPO_NAME}"
        echo "開發者: ${GITHUB_USER}"
        echo "類型: ${EVENT_TYPE}"
        echo "內容: ${TITLE}"

        # 使用開發備註腳本
        node scripts/submit-dev-note.js "${PROJECT_NAME}" "${GITHUB_USER}" "${EVENT_TYPE}" "${TITLE}" "${NUMBER}"

    - name: 推送結果
      run: |
        git config user.name "PR AutoBot"
        git config user.email "pr-autobot@erdashboard"

        # 添加所有變更到暫存區
        git add .

        # 檢查是否有變更
        if git diff --staged --quiet; then
          echo "沒有變更需要推送"
          exit 0
        fi

        git commit -m "自動備註: ${{ steps.event_info.outputs.PROJECT_NAME }} - ${{ steps.event_info.outputs.TITLE }}"

        # 處理並發推送衝突
        git pull --rebase || echo "⚠️ pull 失敗，嘗試直接推送"
        git push
        echo "✅ PR 備註已自動提交！"